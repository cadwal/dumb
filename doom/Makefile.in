# Makefile.in generated automatically by automake 1.2 from Makefile.am

# Copyright (C) 1994, 1995, 1996, 1997 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy, distribute and modify it.


SHELL = /bin/sh

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = true
PRE_INSTALL = true
POST_INSTALL = true
NORMAL_UNINSTALL = true
PRE_UNINSTALL = true
POST_UNINSTALL = true
CC = @CC@
CXX = @CXX@
DUMB_CONFIG_DOOM_WAD = @DUMB_CONFIG_DOOM_WAD@
DUMB_CONFIG_HERETIC_WAD = @DUMB_CONFIG_HERETIC_WAD@
DUMB_CONFIG_SOUND = @DUMB_CONFIG_SOUND@
DUMB_CONFIG_SOUND_LDADD = @DUMB_CONFIG_SOUND_LDADD@
DUMB_DGA_LDADD = @DUMB_DGA_LDADD@
DUMB_FBREREND_SOURCES = @DUMB_FBREREND_SOURCES@
DUMB_NETWORK_LDADD = @DUMB_NETWORK_LDADD@
DUMB_NETWORK_SOURCES = @DUMB_NETWORK_SOURCES@
DUMB_RENDER_SOURCES = @DUMB_RENDER_SOURCES@
DUMB_XKB_LDADD = @DUMB_XKB_LDADD@
DUMB_XSHM_LDADD = @DUMB_XSHM_LDADD@
LN_S = @LN_S@
MAKEINFO = @MAKEINFO@
PACKAGE = @PACKAGE@
RANLIB = @RANLIB@
VERSION = @VERSION@

CXXCPP = @CXXCPP@

@DUMB_CONFIG_DOOM_TRUE@pkgdata_DATA = doom4dum.wad
@DUMB_CONFIG_DOOM_FALSE@pkgdata_DATA = 

CLEANFILES = $(d4d_lumps) PLAYPAL.lump doom4dum.wad

d4d_pt_lumps = ANIMTEX.lump GETTABLE.lump LEVINFO.lump LINETYPE.lump \
 PHASES.lump PROTOS.lump SECTTYPE.lump SOUNDS.lump
d4d_lumps = $(d4d_pt_lumps) COLORM16.lump COLORM32.lump DUMBLOGO.lump
# Keep doom.pt first in this list so $< works right.
d4d_sources = doom.pt animtex.pt furnishings.pt generic.pt gettables.pt \
 levels.pt linetypes.pt missiles.pt monsters.pt sectortypes.pt weapons.pt

wadtool = ../tool/wadtool
ppmtodumb = ../tool/ppmtodumb
ptcomp = ../ptcomp/ptcomp

pt_preprocess = $(CXXCPP) -x c-header -I$(srcdir)

EXTRA_DIST = WAFFLE $(d4d_sources)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = ../config.h
CONFIG_CLEAN_FILES = 
DATA =  $(pkgdata_DATA)

DIST_COMMON =  Makefile.am Makefile.in


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = tar
GZIP = --best
default: all

.SUFFIXES:
$(srcdir)/Makefile.in: Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOMAKE) --gnu --include-deps doom/Makefile

Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


install-pkgdataDATA: $(pkgdata_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(pkgdatadir)
	@list='$(pkgdata_DATA)'; for p in $$list; do \
	  if test -f $(srcdir)/$$p; then \
	    echo " $(INSTALL_DATA) $(srcdir)/$$p $(pkgdatadir)/$$p"; \
	    $(INSTALL_DATA) $(srcdir)/$$p $(pkgdatadir)/$$p; \
	  else if test -f $$p; then \
	    echo " $(INSTALL_DATA) $$p $(pkgdatadir)/$$p"; \
	    $(INSTALL_DATA) $$p $(pkgdatadir)/$$p; \
	  fi; fi; \
	done

uninstall-pkgdataDATA:
	$(NORMAL_UNINSTALL)
	list='$(pkgdata_DATA)'; for p in $$list; do \
	  rm -f $(pkgdatadir)/$$p; \
	done
tags: TAGS
TAGS:


distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = doom

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  test -f $(distdir)/$$file \
	  || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	  || cp -p $$d/$$file $(distdir)/$$file; \
	done
info:
dvi:
check: all
	$(MAKE)
installcheck:
install-exec: 
	@$(NORMAL_INSTALL)

install-data: install-pkgdataDATA
	@$(NORMAL_INSTALL)

install: install-exec install-data all
	@:

uninstall: uninstall-pkgdataDATA

all: Makefile $(DATA)

install-strip:
	$(MAKE) INSTALL_PROGRAM='$(INSTALL_PROGRAM) -s' INSTALL_SCRIPT='$(INSTALL_PROGRAM)' install
installdirs:
	$(mkinstalldirs)  $(pkgdatadir)


mostlyclean-generic:
	test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:
	test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	rm -f Makefile $(DISTCLEANFILES)
	rm -f config.cache config.log stamp-h stamp-h[0-9]*
	test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
	test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
mostlyclean:  mostlyclean-generic

clean:  clean-generic mostlyclean

distclean:  distclean-generic clean
	rm -f config.status

maintainer-clean:  maintainer-clean-generic distclean
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

.PHONY: default uninstall-pkgdataDATA install-pkgdataDATA tags distdir \
info dvi installcheck install-exec install-data install uninstall all \
installdirs mostlyclean-generic distclean-generic clean-generic \
maintainer-clean-generic clean mostlyclean distclean maintainer-clean

# -x c-header is required because $(CXXCPP) is typically g++ -E which
# assumes the .pt files are linker input and thus ignores them.  If
# $(CXXCPP) is something else, -x c-header will cause it to fail.  In
# that case, try this definition (which uses -lang-c++ because of //
# comments and so needs GNU cpp):
#
# pt_preprocess = /lib/cpp -lang-c++ -I$(srcdir)
#
# If you need it, please report, so I can add a check in
# ../configure.in or devise a trickier scheme.  (One idea would be to
# create a temporary C++ file containing just #include <foo.pt> and
# preprocess that.)

PLAYPAL.lump: $(DUMB_CONFIG_DOOM_WAD) $(wadtool)
	$(wadtool) -r $< -x PLAYPAL

# ../docs/dumblogo.ppm is searched in VPATH and $< refers to it.
DUMBLOGO.lump: ../docs/dumblogo.ppm PLAYPAL.lump $(ppmtodumb)
	$(ppmtodumb) -p -M PLAYPAL.lump <$< >$@

$(d4d_pt_lumps): $(d4d_sources) $(ptcomp)
	$(pt_preprocess) -DDOOM $< | $(ptcomp) .

COLORM16.lump: PLAYPAL.lump $(ppmtodumb)
	$(ppmtodumb) -c -2 -M $< >$@

COLORM32.lump: PLAYPAL.lump $(ppmtodumb)
	$(ppmtodumb) -c -4 -M $< >$@

doom4dum.wad: $(wadtool) $(d4d_lumps)
	$(wadtool) -w $@ -f $(srcdir)/WAFFLE $(d4d_lumps)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
